@import "../../styles/variables.module";
@import "../../styles/screenhooks";
@import "../../styles/typed";

.hero {
  background-color: $black;
  color: $white;
  padding: $spacing-6 0;
  @include sm-and-above {
    padding: $spacing-12 0;
  }
  &.withoutImg {
    @include sm-and-above {
      text-align: center;
      padding: $spacing-12 0 $spacing-8 0;
    }
    .container {
      grid-template-columns: 1fr;
    }
  }
  .container {
    display: grid;
    grid-template-columns: 1fr;
    align-items: center;
    gap: clamp(25px, 8vw, 120px);
    @include lg-and-above {
      gap: clamp(50px, 8vw, 120px);
      grid-template-columns: 1.75fr 1fr;
    }
  }
  .typed {
    display: block;
    font-family: monospace;
    font-size: 75%;
    width: 100%;
    margin-bottom: $spacing-2;
    > .placeholder {
      font-size: 22px;
      display: block;
      appearance: none;
      width: 100%;
      height: 100%;
      background-color: transparent;
      border: none;
      pointer-events: none;
      &.en {
        @include typed(
          "Hello, my name is",
          "Speak friend and enter",
          1.2,
          (
            caret-width: 12px,
            caret-space: 1px
          )
        );
        @include sm-and-above {
          @include typed(
            "Hello, my name is",
            "const speakFriendAndEnter = () => \"mellon\"",
            1.2,
            (
              caret-width: 12px,
              caret-space: 1px
            )
          );
        }
      }
      &.es {
        @include typed(
          "Hola, mi nombre es",
          "DÃ­ amigo, y entra",
          1.2,
          (
            caret-width: 12px,
            caret-space: 1px
          )
        );
        @include sm-and-above {
          @include typed(
            "Hola, mi nombre es",
            "const diAmigoYEntra = () => \"mellon\"",
            1.2,
            (
              caret-width: 12px,
              caret-space: 1px
            )
          );
        }
      }
    }
  }
  .headline {
    margin-bottom: $spacing-1;
    text-transform: uppercase;
    &.centered {
      text-align: center;
    }
  }
  .projectDetail {
    display: grid;
    justify-items: center;
    .img {
      width: clamp(280px, 30vw, 400px);
      &.square {
        max-height: 17vh;
        width: fit-content;
      }
    }
  }
  .contactCta {
    margin-top: 1rem;
  }

  .ctas {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: $spacing-3;
    margin-top: $spacing-5;
    @include sm-and-above {
      flex-direction: row;
      justify-content: center;
      gap: $spacing-5;
    }
  }
  .projectCta {
    margin-top: $spacing-5;
  }
  .subHeadline {
    margin-bottom: $spacing-4;
    em {
      color: rgb(var(--random-rgb-color));
    }
  }
  .text {
    strong {
      transition: color 0.3s ease;
      color: rgb(var(--random-rgb-color, $whiteRGB));
      @include sm-and-above {
        color: unset;
      }
    }
  }
  .shadowContainer {
    filter: drop-shadow(7px 0px 6px rgba(var(--random-rgb-color), 0.3));
    padding: 20px 0;
  }
  .imgContainer {
    display: grid;
    place-items: center;
  }
  .hexagon {
    width: clamp(250px, 65vw, 320px);
    height: clamp(250px, 65vw, 350px);
    background-color: #424242;
    -webkit-clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
    clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
  }
  .img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: right;
    max-width: 100%;
  }
  @media(hover:hover) {
    &:hover {
      strong {
        color: rgb(var(--random-rgb-color, $whiteRGB));
      }
    }
  }
}
